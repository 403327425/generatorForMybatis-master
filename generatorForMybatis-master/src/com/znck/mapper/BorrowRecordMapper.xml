<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.znck.dao.BorrowRecordMapper" >
  <resultMap id="BaseResultMap" type="com.znck.pojo.BorrowRecord" >
    <id column="record_id" property="recordId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="borrow_time" property="borrowTime" jdbcType="TIMESTAMP" />
    <result column="return_time" property="returnTime" jdbcType="TIMESTAMP" />
    <result column="borrow_num" property="borrowNum" jdbcType="INTEGER" />
    <result column="return_num" property="returnNum" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  
  
  
  <resultMap id="SearchResultMap" type="com.znck.pojo.item.BorrowRecordItem" >
    <id column="record_id" property="recordId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="borrow_time" property="borrowTime" jdbcType="TIMESTAMP" />
    <result column="return_time" property="returnTime" jdbcType="TIMESTAMP" />
    <result column="borrow_num" property="borrowNum" jdbcType="INTEGER" />
    <result column="return_num" property="returnNum" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
  </resultMap>
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    record_id, user_id, goods_id, borrow_time, return_time, borrow_num, return_num, state
  </sql>
  
  <select id="selectBySearch" resultMap="SearchResultMap" parameterType="com.znck.pojo.search.BorrowRecordSearch" >
	SELECT 
	    a.record_id,
	    a.user_id,
	    a.goods_id,
	    a.borrow_time,
	    a.return_time,
	    a.borrow_num,
	    a.return_num,
	    a.state,
	    a.user_name,
	    goods.goods_name
	FROM
	    (SELECT 
	        borrow_record.record_id,
	            borrow_record.user_id,
	            borrow_record.goods_id,
	            borrow_record.borrow_time,
	            borrow_record.return_time,
			    borrow_record.borrow_num,
			    borrow_record.return_num,
	            borrow_record.state,
	            user_info.user_name
	    FROM
	        znck.borrow_record
	    LEFT JOIN znck.user_info ON borrow_record.user_id = user_info.user_id
	    <where>
	    	<if test="userName!=null">
	    		and user_info.user_name like "%" #{userName} "%"
	    	</if>
	    	<if test="borrowTimeStart!=null">
	    		and borrow_record.borrow_time  &gt;= #{borrowTimeStart} 
	    	</if>
	    	<if test="borrowTimeEnd!=null">
	    		and borrow_record.borrow_time &lt;=  #{borrowTimeEnd} 
	    	</if>
	    	<if test="returnTimeStart!=null">
	    		and borrow_record.back_time &gt;=  #{returnTimeStart} 
	    	</if>
	    	<if test="returnTimeEnd!=null">
	    		and borrow_record.back_time &lt;=  #{returnTimeEnd} 
	    	</if>
	    	<if test="state!=null">
	    		and borrow_record.state = #{state}
	    	</if>
	    	
	    </where>
	    ) AS a
	        LEFT JOIN
	    znck.goods ON a.goods_id = goods.goods_id
	    <where>
	    	<if test="goodsName!=null">
	    		 goods.goodsName like "%" #{goodsName} "%"
	    	</if>
	    </where>
  </select>
  
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.znck.pojo.BorrowRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from borrow_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from borrow_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from borrow_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.znck.pojo.BorrowRecordExample" >
    delete from borrow_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.znck.pojo.BorrowRecord" >
    insert into borrow_record (record_id, user_id, goods_id, 
      borrow_time, return_time, borrow_num, 
      return_num, state)
    values (#{recordId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{borrowTime,jdbcType=TIMESTAMP}, #{returnTime,jdbcType=TIMESTAMP}, #{borrowNum,jdbcType=INTEGER}, 
      #{returnNum,jdbcType=INTEGER}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.znck.pojo.BorrowRecord" >
    insert into borrow_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        record_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="borrowTime != null" >
        borrow_time,
      </if>
      <if test="returnTime != null" >
        return_time,
      </if>
      <if test="borrowNum != null" >
        borrow_num,
      </if>
      <if test="returnNum != null" >
        return_num,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="borrowTime != null" >
        #{borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null" >
        #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="borrowNum != null" >
        #{borrowNum,jdbcType=INTEGER},
      </if>
      <if test="returnNum != null" >
        #{returnNum,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.znck.pojo.BorrowRecordExample" resultType="java.lang.Integer" >
    select count(*) from borrow_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update borrow_record
    <set >
      <if test="record.recordId != null" >
        record_id = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.borrowTime != null" >
        borrow_time = #{record.borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.returnTime != null" >
        return_time = #{record.returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.borrowNum != null" >
        borrow_num = #{record.borrowNum,jdbcType=INTEGER},
      </if>
      <if test="record.returnNum != null" >
        return_num = #{record.returnNum,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update borrow_record
    set record_id = #{record.recordId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      borrow_time = #{record.borrowTime,jdbcType=TIMESTAMP},
      return_time = #{record.returnTime,jdbcType=TIMESTAMP},
      borrow_num = #{record.borrowNum,jdbcType=INTEGER},
      return_num = #{record.returnNum,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.znck.pojo.BorrowRecord" >
    update borrow_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="borrowTime != null" >
        borrow_time = #{borrowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnTime != null" >
        return_time = #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="borrowNum != null" >
        borrow_num = #{borrowNum,jdbcType=INTEGER},
      </if>
      <if test="returnNum != null" >
        return_num = #{returnNum,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.znck.pojo.BorrowRecord" >
    update borrow_record
    set user_id = #{userId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      borrow_time = #{borrowTime,jdbcType=TIMESTAMP},
      return_time = #{returnTime,jdbcType=TIMESTAMP},
      borrow_num = #{borrowNum,jdbcType=INTEGER},
      return_num = #{returnNum,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
</mapper>